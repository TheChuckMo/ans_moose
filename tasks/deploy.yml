---
- name: base permissions
  file:
    name: "{{ deploy_base }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"
    mode: '2775'
    state: directory
  tags: [base]

- name: update inventory
  git: 
    accept_hostkey: yes
    repo: "{{ deploy_inv_repo }}"
    dest: "{{ deploy_inv }}"
    version: "{{ deploy_inv_branch }}"
    update: yes
  become_user: "{{ deploy_repo_owner }}"
  tags: [inventory]

- name: roles directory
  file:
    path: "{{ deploy_roles }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"
    mode: '2775'
  tags: [roles]

- name: roles requirements.yml 
  copy:
    dest: "{{ deploy_base }}/requirements.yml"
    src: "files/{{ deploy_env }}/requirements.yml"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"

- name: install roles
  command: |
    ansible-galaxy install {{ '--force' if deploy_roles_force else '' }} 
    --roles-path {{ deploy_roles }} 
    --role-file {{ deploy_base }}/requirements.yml
    --ignore-certs

- name: forklift directory
  file:
    path: "{{ deploy_forklift }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"
    mode: '2775'
  tags: [forklift]

- name: clone forklift
  git:
    accept_hostkey: yes
    repo: "{{ deploy_forklift_repo }}"
    dest: "{{ deploy_forklift }}"
    version: "{{ deploy_forklift_branch }}"
  become_user: "{{ deploy_repo_owner }}"
  tags: [forklift]

- name: redis setup
  block:
  - name: install redis packages
    yum:
      name: "{{ redis_pkgs }}"
      state: present

  - name: enable redis service
    service:
      name: redis
      enabled: yes
      state: started
  when: redis_setup
  tags: [redis]

- name: ansible vault
  file:
    state: directory
    path: "{{ ansible_vault }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"
    mode: '0775'
  tags: [vaultid]

- name: ansible vault id
  copy:
    dest: "{{ ansible_vault_file }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"
    mode: '0664'
    content: "{{ deploy_secret | password_hash('sha512', 65534|random(seed=inventory_hostname)|string) }}"
  tags: [vaultid]

- name: ansible config file
  copy: 
    dest: /etc/ansible/ansible.cfg
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"
    mode: '0664'
    content: "{{ lookup('file', ansible_cfg) }}"
  tags: [ansible_config]
